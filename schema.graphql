type Identity {
  id: ID!
  email: String!
  givenName: String!
  familyName: String!
  profilePicture: String
}

input CreateIdentity {
  id: ID!
  email: String!
  givenName: String!
  familyName: String!
  profilePicture: String
}

input UpdateIdentity {
  id: ID!
  email: String!
  givenName: String!
  familyName: String!
  profilePicture: String
}

type Org {
  id: ID!
  slug: String!
  name: String!
  lightIcon: String
  darkIcon: String
}

input CreateOrgInput {
  slug: String!
  name: String!
}

input UpdateOrgInput {
  id: ID!
  name: String
  lightIcon: String
  darkIcon: String
}

type Mutation {
  createIdentity(input: CreateIdentity!): Identity
  updateIdentity(input: UpdateIdentity!): Identity
  createOrg(input: CreateOrgInput!): Org
  updateOrg(input: UpdateOrgInput!): Org
}

type Query {
  getIdentity(id: String!): Identity
  orgExists(slug: String!): Boolean
}

#type Query {
#  getOrganizations: [Organization!]
#}
#
#input OrganizationInput {
#  slug: String!
#  name: String!
#  lightIcon: String
#  darkIcon: String
#}
#
#type Mutation {
#  addOrganization(input: OrganizationInput!): Organization
#}

#type User {
#  id: String!
#  email: String!
#  givenName: String!
#  familyName: String!
#  profilePicture: String
#}
#
#type demo {
#  id: String!
#  version: String!
#}
#type Query {
#  getDemos: [demo!]
#}
#input DemoInput {
#  version: String!
#}
#type Mutation {
#  addDemo(input: DemoInput!): demo
#}
